/*
AGPL License
Copyright 2022 ysicing(i@ysicing.me).
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/ysicing/cloudflow/apis/jobs/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InitNasLister helps list InitNases.
// All objects returned here must be treated as read-only.
type InitNasLister interface {
	// List lists all InitNases in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.InitNas, err error)
	// InitNases returns an object that can list and get InitNases.
	InitNases(namespace string) InitNasNamespaceLister
	InitNasListerExpansion
}

// initNasLister implements the InitNasLister interface.
type initNasLister struct {
	indexer cache.Indexer
}

// NewInitNasLister returns a new InitNasLister.
func NewInitNasLister(indexer cache.Indexer) InitNasLister {
	return &initNasLister{indexer: indexer}
}

// List lists all InitNases in the indexer.
func (s *initNasLister) List(selector labels.Selector) (ret []*v1beta1.InitNas, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.InitNas))
	})
	return ret, err
}

// InitNases returns an object that can list and get InitNases.
func (s *initNasLister) InitNases(namespace string) InitNasNamespaceLister {
	return initNasNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InitNasNamespaceLister helps list and get InitNases.
// All objects returned here must be treated as read-only.
type InitNasNamespaceLister interface {
	// List lists all InitNases in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.InitNas, err error)
	// Get retrieves the InitNas from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.InitNas, error)
	InitNasNamespaceListerExpansion
}

// initNasNamespaceLister implements the InitNasNamespaceLister
// interface.
type initNasNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InitNases in the indexer for a given namespace.
func (s initNasNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.InitNas, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.InitNas))
	})
	return ret, err
}

// Get retrieves the InitNas from the indexer for a given namespace and name.
func (s initNasNamespaceLister) Get(name string) (*v1beta1.InitNas, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("initnas"), name)
	}
	return obj.(*v1beta1.InitNas), nil
}
