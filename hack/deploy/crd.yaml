apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: clusterendpoints.network.ysicing.me
spec:
  group: network.ysicing.me
  names:
    kind: ClusterEndpoint
    listKind: ClusterEndpointList
    plural: clusterendpoints
    singular: clusterendpoint
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterEndpoint is the Schema for the clusterendpoints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterEndpointSpec defines the desired state of ClusterEndpoint
            properties:
              clusterIP:
                type: string
              host:
                type: string
              ports:
                items:
                  properties:
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults to HTTP.
                          type: string
                      type: object
                    port:
                      description: The port that will be exposed by this service.
                      format: int32
                      type: integer
                    protocol:
                      default: TCP
                      description: The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                      type: string
                    tcpSocket:
                      description: TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
                      properties:
                        enable:
                          type: boolean
                      required:
                      - enable
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    udpSocket:
                      description: UDPSocketAction specifies an action involving a UDP port. UDP hooks not yet supported
                      properties:
                        data:
                          description: UDP test data
                          items:
                            type: integer
                          type: array
                        enable:
                          type: boolean
                      required:
                      - enable
                      type: object
                  required:
                  - port
                  type: object
                type: array
            required:
            - host
            - ports
            type: object
          status:
            description: ClusterEndpointStatus defines the observed state of ClusterEndpoint
            properties:
              conditions:
                items:
                  properties:
                    lastHeartbeatTime:
                      description: LastHeartbeatTime is the last time this condition was updated.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition changed from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating details about the last status change.
                      type: string
                    reason:
                      description: Reason is a (brief) reason for the condition's last status change.
                      type: string
                    status:
                      description: Status is the status of the condition. One of True, False, Unknown.
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: gentls.jobs.ysicing.me
spec:
  group: jobs.ysicing.me
  names:
    kind: GenTLS
    listKind: GenTLSList
    plural: gentls
    singular: gentls
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: GenTLS is the Schema for the gentls API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GenTLSSpec defines the desired state of GenTLS
            properties:
              foo:
                description: Foo is an example field of GenTLS. Edit gentls_types.go to remove/update
                type: string
            type: object
          status:
            description: GenTLSStatus defines the observed state of GenTLS
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: initnas.jobs.ysicing.me
spec:
  group: jobs.ysicing.me
  names:
    kind: InitNas
    listKind: InitNasList
    plural: initnas
    singular: initnas
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: InitNas is the Schema for the initnas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InitNasSpec defines the desired state of InitNas
            properties:
              foo:
                description: Foo is an example field of InitNas. Edit initnas_types.go to remove/update
                type: string
            type: object
          status:
            description: InitNasStatus defines the observed state of InitNas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: webs.apps.ysicing.me
spec:
  group: apps.ysicing.me
  names:
    kind: Web
    listKind: WebList
    plural: webs
    singular: web
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Web is the Schema for the webs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WebSpec defines the desired state of Web
            properties:
              envs:
                items:
                  description: EnvVar represents an environment variable present in a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes, optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              image:
                type: string
              imagePullPolicy:
                type: string
              replicas:
                format: int32
                type: integer
              resources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              restartPolicy:
                type: string
              service:
                properties:
                  ports:
                    items:
                      properties:
                        ingress:
                          properties:
                            class:
                              type: string
                            hostname:
                              type: string
                            tlsName:
                              type: string
                          required:
                          - hostname
                          type: object
                        name:
                          type: string
                        port:
                          format: int32
                          type: integer
                        protocol:
                          type: string
                      required:
                      - port
                      type: object
                    type: array
                  type:
                    type: string
                required:
                - ports
                type: object
              type:
                type: string
              volume:
                properties:
                  mountPaths:
                    items:
                      properties:
                        mountPath:
                          type: string
                        name:
                          type: string
                        subPath:
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  name:
                    type: string
                  path:
                    type: string
                  type:
                    type: string
                required:
                - mountPaths
                - name
                - type
                type: object
            required:
            - image
            type: object
          status:
            description: WebStatus defines the observed state of Web
            properties:
              ready:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
